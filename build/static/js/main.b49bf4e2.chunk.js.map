{"version":3,"sources":["components/ReactCalender.js","components/headerfiles/header.js","components/SidebarData.js","components/sample-base.js","components/DoctorView.js","components/PatientView.js","components/TempDoctor.js","components/Login/login.jsx","App.js","components/Login/docregister.jsx","reportWebVitals.js","index.js"],"names":["Component","PatientData","title","path","icon","sub","cName","name","DoctorData","enableRipple","SampleBase","setTimeout","rendereComplete","React","DoctorView","arguments","dataManger","DataManager","url","crudUrl","WebApiAdaptor","state","Subject","eventType","sTime","eTime","Description","data","id","StartTime","Date","EndTime","IsBlock","PatientID","DoctorID","fetch","method","body","JSON","stringify","then","res","console","log","args","type","cancel","props","undefined","className","style","width","cellpadding","colSpan","placeholder","data-name","dataSource","value","EventType","format","startTime","endTime","rows","cols","height","resize","categoryColor","CategoryColor","element","this","scheduleObj","currentView","firstChild","borderLeftColor","backgroundColor","map","item","index","to","posting","editorTemplate","bind","popupOpen","onPopupOpen","float","border","paddingTop","eventSettings","eventRendered","onEventRendered","services","Day","Week","WorkWeek","Month","Agenda","DragAndDrop","PatientView","adaptor","crossDomain","history","replace","window","location","reload","withRouter","TempDoctor","readonly","Login","htmlFor","App","exact","component","Home","renderAs","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b49bf4e2.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n \nexport default class ReactCalender extends Component {\n  state = {\n    date: new Date(),\n  }\n \n  onChange = date => this.setState({ date })\n \n  render() {\n    return (\n      <div>\n        <Calendar\n          onChange={this.onChange}\n          value={this.state.date}\n        />\n      </div>\n    );\n  }\n}","\nimport React, {Component} from 'react';\n\nclass Header extends Component {\n  render(){\n  return (\n    <header>\n         <nav>\n             <a href = \"index.html\"><img src = \"/static/logo.png\" alt = \"logo\" width = \"200\"></img></a>\n        {/* <div class=\"logo\">\n            <h4> <a href=\"index.html\">MPHealth</a></h4>\n        </div> */}\n        <ul class=\"navlinks\">\n           \n            <li><a href=\"#\">Appointments</a></li>\n            <li><a href=\"#\">Notifications</a></li>\n            <li><a href=\"#\">Log in/Sign up</a></li>\n            \n        </ul>\n        <div class=\"burger\">\n            <div class=\"line1\"></div>\n            <div class=\"line2\"></div>\n            <div class=\"line3\"></div>\n        </div>\n    </nav>\n    </header>\n  );\n}\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nexport const PatientData = [\n  {\n    title: \"Dashboard\",\n    path: \"/home\",\n    icon: <h1>D</h1>,\n    sub: [],\n    cName: 'nav-text'\n  },\n  {\n    title: \"Appointments\",\n    path: \"/\",\n    icon: <h1>A </h1>,\n    cName: 'nav-text',\n    sub: [\n      {\n        name: \"day\",\n        path: \"/\"\n      },\n      {\n        name: \"week\",\n        path: \"/\"\n      },\n      {\n        name: \"month\",\n        path: \"/\"\n      }\n    ]\n  },\n  {\n    title: \"Doctor\",\n    path: \"/doctor\",\n    icon: <h1>D</h1>,\n    sub: [],\n    cName: 'nav-text'\n  }\n];\n\nexport const DoctorData = [\n  {\n    title: \"Dashboard\",\n    path: \"/home\",\n    icon: <h1>D</h1>,\n    sub: [],\n    cName: 'nav-text'\n  },\n  {\n    title: \"Appointments\",\n    path: \"/\",\n    icon: <h1>A </h1>,\n    cName: 'nav-text',\n    sub: [\n      {\n        name: \"day\",\n        path: \"/\"\n      },\n      {\n        name: \"week\",\n        path: \"/\"\n      },\n      {\n        name: \"month\",\n        path: \"/\"\n      }\n    ]\n  },\n  {\n    title: \"Patient\",\n    path: \"/patient\",\n    icon: <h1>P</h1>,\n    sub: [],\n    cName: 'nav-text'\n  }\n];","import * as React from 'react';\n    import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\n\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","import React, {Component} from 'react';\nimport Header from './headerfiles/header';\nimport{Inject,ScheduleComponent, Day,Week, WorkWeek, Month, Agenda, DragAndDrop} from '@syncfusion/ej2-react-schedule';\nimport {DoctorData} from \"./SidebarData.js\";\nimport {Link } from \"react-router-dom\";\nimport { SampleBase } from \"./sample-base\";\nimport { DataManager, WebApiAdaptor } from \"@syncfusion/ej2-data\";\nimport { DateTimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\nimport { DropDownListComponent } from \"@syncfusion/ej2-react-dropdowns\";\n\nexport default class DoctorView extends SampleBase {\n  constructor() {\n    super(...arguments);\n    this.dataManger = new DataManager({\n      url: \"http://127.0.0.1:8000/api/Appointment/\",\n      crudUrl: \"http://127.0.0.1:8000/api/Appointment/\",\n        // \"https://ej2services.syncfusion.com/production/web-services/api/Schedule\",\n      crudUrl: \"http://127.0.0.1:8000/api/Appointment/\",\n      adaptor: new WebApiAdaptor(),\n      crossDomain: true\n    });\n\n    this.state = {\n      Subject: \" \",\n      eventType: \" \",\n      sTime: \" \",\n      eTime: \" \",\n      Description: \" \"\n    }\n  }\n\n  posting(){\n    let data = {\n      id: 5,\n      Subject: 'Erics Appointment',\n      StartTime: new Date(2018, 1, 15, 10, 0),\n      EndTime: new Date(2018, 1, 15, 11, 30),\n      IsBlock: false,\n      PatientID: 1,\n      DoctorID: 1\n  };\n\n    fetch(\"http://127.0.0.1:8000/api/Appointment/\", {\n      method: \"POST\", \n      body: JSON.stringify(data)\n    }).then(res => {\n      console.log(\"Request complete! response:\", res);\n    });\n}\n\n  onPopupOpen(args) {\n    if (args.type === 'QuickInfo') {\n      // let statusElement = args.element.querySelector(\"#EventType\");\n      // statusElement.setAttribute(\"name\", \"EventType\");\n      args.cancel = true;\n      // alert('You can use your customized popup here for quick info popup.');\n    }\n  } \n  \n  editorTemplate(props) {\n    return props !== undefined ? (\n      <table\n        className=\"custom-event-editor\"\n        style={{ width: \"100%\", cellpadding: \"5\" }}\n      >\n        <tbody>\n          <tr>\n            <td className=\"e-textlabel\">Name</td>\n            <td colSpan={4}>\n              <input\n                id=\"Summary\"\n                className=\"e-field e-input\"\n                type=\"text\"\n                name=\"Subject\"\n              //  value={Subject}\n                style={{ width: \"100%\" }}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">Type of Visit</td>\n            <td colSpan={4}>\n              <DropDownListComponent\n                id=\"EventType\"\n                placeholder=\"Choose Type\"\n                data-name=\"EventType\"\n                className=\"e-field\"\n                style={{ width: \"100%\" }}\n                dataSource={[\"Sick\", \"Emergency\", \"Check-Up\"]}\n                value={props.EventType || null}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">From</td>\n            <td colSpan={4}>\n              <DateTimePickerComponent\n                format=\"dd/MM/yy hh:mm a\"\n                id=\"StartTime\"\n                data-name=\"StartTime\"\n                value={new Date(props.startTime || props.StartTime)}\n                className=\"e-field\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">To</td>\n            <td colSpan={4}>\n              <DateTimePickerComponent\n                format=\"dd/MM/yy hh:mm a\"\n                id=\"EndTime\"\n                data-name=\"EndTime\"\n                value={new Date(props.endTime || props.EndTime)}\n                className=\"e-field\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">Reason for visit</td>\n            <td colSpan={4}>\n              <textarea\n                id=\"Description\"\n                className=\"e-field e-input\"\n                name=\"Description\"\n                rows={3}\n                cols={50}\n                style={{\n                  width: \"100%\",\n                  height: \"60px !important\",\n                  resize: \"vertical\"\n                }}\n//                value={{Description}}\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    ) : (\n      <div />\n    );\n  }\n  onEventRendered(args) {\n    let categoryColor = args.data.CategoryColor;\n    if (!args.element || !categoryColor) {\n        return;\n    }\n    if (this.scheduleObj.currentView === 'Agenda') {\n        args.element.firstChild.style.borderLeftColor = categoryColor;\n    }\n    else {\n        args.element.style.backgroundColor = categoryColor;\n    }\n}\n  render(){\n    return (        \n      <div style={{backgroundColor: '#E5E5E5'}}>\n        {/* <Header /> */}\n        <div className=\"sidenav\">\n          {DoctorData.map((item, index) => {\n            return (\n              <li key={index} \n                  className={item.cName}>\n                    <Link to={item.path}>{item.title}</Link>\n              </li>\n              )\n          })\n          }\n          </div>\n          {this.posting()}\n          <div className=\"calender\">\n\n            <ScheduleComponent  editorTemplate={this.editorTemplate.bind(this)} popupOpen={this.onPopupOpen.bind(this)} style={{float: 'right', backgroundColor: 'E5E5E5', border: 'none', paddingTop: '5%' }} width = '80%' height = '100%' currentView = 'Week' eventSettings={{ dataSource: this.dataManger }} eventRendered={this.onEventRendered.bind(this)}>\n\n                <Inject services = {[Day,Week, WorkWeek, Month, Agenda, DragAndDrop]}/>\n              </ScheduleComponent>\n          </div>\n      </div>\n    );\n  }\n}","import './Sidebar.css';\n\nimport React, {Component} from 'react';\nimport Header from './headerfiles/header';\nimport{Inject,ScheduleComponent, Day,Week, WorkWeek, Month, Agenda} from '@syncfusion/ej2-react-schedule';\nimport {PatientData} from \"./SidebarData.js\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { SampleBase } from \"./sample-base\";\nimport { DataManager, WebApiAdaptor } from \"@syncfusion/ej2-data\";\nimport { DateTimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\nimport { DropDownListComponent } from \"@syncfusion/ej2-react-dropdowns\";\nimport { withRouter } from \"react-router-dom\";\n\nclass PatientView extends Component {\n  constructor() {\n    super(...arguments);\n    this.dataManger = new DataManager({\n      url: \"http://127.0.0.1:8000/api/DocAvailability\",\n      crudUrl: \"http://127.0.0.1:8000/admin/user/appointment/add/\",\n        // \"https://ej2services.syncfusion.com/production/web-services/api/Schedule\",\n      adaptor: new WebApiAdaptor(),\n      crossDomain: true,\n      IsBlock: true\n    });\n  }\n  onPopupOpen(args) {\n    if (args.type === 'QuickInfo') {\n      // let statusElement = args.element.querySelector(\"#EventType\");\n      // statusElement.setAttribute(\"name\", \"EventType\");\n      args.cancel = true;\n      this.props.history.replace(\"/create/create_appointment\");\n      window.location.reload();\n     \n    }\n  }\n  editorTemplate(props) {\n    return props !== undefined ? (\n      <table\n        className=\"custom-event-editor\"\n        style={{ width: \"100%\", cellpadding: \"5\" }}\n      >\n        <tbody>\n          <tr>\n            <td className=\"e-textlabel\">Name</td>\n            <td colSpan={4}>\n              <input\n                id=\"Summary\"\n                className=\"e-field e-input\"\n                type=\"text\"\n                name=\"Subject\"\n                style={{ width: \"100%\" }}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">Type of Visit</td>\n            <td colSpan={4}>\n              <DropDownListComponent\n                id=\"EventType\"\n                placeholder=\"Choose Type\"\n                data-name=\"EventType\"\n                className=\"e-field\"\n                style={{ width: \"100%\" }}\n                dataSource={[\"Sick\", \"Emergency\", \"Check-Up\"]}\n                value={props.EventType || null}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">From</td>\n            <td colSpan={4}>\n              <DateTimePickerComponent\n                format=\"dd/MM/yy hh:mm a\"\n                id=\"StartTime\"\n                data-name=\"StartTime\"\n                value={new Date(props.startTime || props.StartTime)}\n                className=\"e-field\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">To</td>\n            <td colSpan={4}>\n              <DateTimePickerComponent\n                format=\"dd/MM/yy hh:mm a\"\n                id=\"EndTime\"\n                data-name=\"EndTime\"\n                value={new Date(props.endTime || props.EndTime)}\n                className=\"e-field\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">Reason for visit</td>\n            <td colSpan={4}>\n              <textarea\n                id=\"Description\"\n                className=\"e-field e-input\"\n                name=\"Description\"\n                rows={3}\n                cols={50}\n                style={{\n                  width: \"100%\",\n                  height: \"60px !important\",\n                  resize: \"vertical\"\n                }}\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    ) : (\n      <div />\n    );\n  }\n  render(){\n    return (  \n      \n      <div style={{backgroundColor: '#E5E5E5'}}>\n        {/* <Header />  */}\n        <div className=\"sidenav\">\n          {PatientData.map((item, index) => {\n            return (\n              <li key={index} \n                  className={item.cName}>\n                    <Link to={item.path}>{item.title}</Link>\n              </li>\n              )\n          })\n          }\n          {/*  */}\n        \n        </div> \n        <div className=\"calender\">\n        <ScheduleComponent  editorTemplate={this.editorTemplate.bind(this)} popupOpen={this.onPopupOpen.bind(this)} style={{float: 'right', backgroundColor: 'E5E5E5', border: 'none', paddingTop: '5%' }} width = '80%' height = '100%' currentView = 'Week' eventSettings={{ dataSource: this.dataManger }}>\n                <Inject services = {[Day,Week, WorkWeek, Month, Agenda]}/>\n              </ScheduleComponent>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default withRouter(PatientView);","import { render } from \"react-dom\";\nimport * as React from \"react\";\nimport {\n  ScheduleComponent,\n  Day,\n  Week,\n  WorkWeek,\n  Month,\n  Agenda,\n  Inject\n} from \"@syncfusion/ej2-react-schedule\";\n\nimport { SampleBase } from \"./sample-base\";\nimport { DataManager, WebApiAdaptor } from \"@syncfusion/ej2-data\";\n/**\n * Schedule remote data sample\n */\nexport class TempDoctor extends SampleBase {\n  constructor() {\n    super(...arguments);\n    this.dataManger = new DataManager({\n      url: \"http://127.0.0.1:8000/api/Appointment/?format=json\",\n        // \"https://ej2services.syncfusion.com/production/web-services/api/Schedule\",\n      adaptor: new WebApiAdaptor(),\n      crossDomain: true\n    });\n  }\n  render() {\n    return (\n      <div className=\"schedule-control-section\">\n        <div className=\"control-section\">\n          <div className=\"control-wrapper\">\n            <ScheduleComponent\n              width=\"100%\"\n              height=\"650px\"\n              eventSettings={{ dataSource: this.dataManger }}\n              readonly={false}\n            >\n              <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\n            </ScheduleComponent>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TempDoctor;\n\n","import React, {Component} from 'react';\n\nexport class Login extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return <div className = \"basecontainer\">\n            <div className = \"header\"> Login</div>\n            <div className = \"content\">\n                <div className =\"form\">\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"username\"> Username</label>\n                        <input type = \"text\" name =\"username\" placeholder = \"username\"/>\n                    </div>\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"password\"> Password</label>\n                        <input type = \"password\" name =\"password\" placeholder = \"password\"/>\n                    </div>\n\n                </div>\n            </div>\n            <div className = \"footer\">\n                <button type = \"button\" className = \"btn\">\n                    Login\n                </button>\n            </div>\n        </div>\n    }\n}","import './App.css';\nimport ReactCalender from './components/ReactCalender';\nimport React, {Component} from 'react';\nimport Header from './components/headerfiles/header';\nimport{Inject,ScheduleComponent, Day,Week, WorkWeek, Month, Agenda, EventSettingsModel} from '@syncfusion/ej2-react-schedule';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport DoctorView from './components/DoctorView';\nimport PatientView from './components/PatientView';\nimport TempDoctor from './components/TempDoctor';\nimport { Link } from 'react-router-dom';\nimport { Login } from \"./components/Login/index\";\n\n\nclass App extends Component {\n  render(){\n    return (\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route path='/' exact component={Home} />\n            <Route path='/doctor' component={DoctorView} />\n            <Route path='/patient' component={PatientView} />\n            <Route path='/temp' component={TempDoctor} />\n          </Switch>\n        </div>\n\n      </Router>        \n      \n    );\n  }\n}\n\nconst Home = () => (\n  <div>\n    <Login/>\n    <Link to=\"/doctor\">\n  <button renderAs=\"button\">\n    <span>Doctor</span>\n  </button>\n</Link>\n  </div>\n)\n\nexport default App;\n","import React, {Component} from 'react';\n\nexport class DocRegister extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return <div className = \"basecontainer\">\n            <div className = \"header\"> Register</div>\n            <div className = \"content\">\n                <div className =\"form\">\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"username\"> Username</label>\n                        <input type = \"text\" name =\"username\" placeholder = \"username\"/>\n                    </div>\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"email\"> Email</label>\n                        <input type = \"email\" name =\"email\" placeholder = \"email\"/>\n                    </div>\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"clinic\"> Clinic</label>\n                        <input type = \"text\" name =\"clinic\" placeholder = \"clinic\"/>\n                    </div>\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"password\"> Password</label>\n                        <input type = \"password\" name =\"password\" placeholder = \"password\"/>\n                    </div>\n\n                </div>\n            </div>\n            <div className = \"footer\">\n                <button type = \"button\" className = \"btn\">\n                    Register\n                </button>\n            </div>\n        </div>\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}