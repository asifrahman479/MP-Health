{"version":3,"sources":["components/headerfiles/header.js","components/SidebarData.js","components/sample-base.js","components/DoctorView.js","components/PatientView.js","components/TempDoctor.js","components/Login/login.jsx","App.js","components/Login/docregister.jsx","reportWebVitals.js","index.js"],"names":["Header","href","src","alt","width","class","Component","PatientData","title","path","icon","faUserMd","sub","cName","DoctorData","faClock","faCalendar","faUsers","enableRipple","SampleBase","setTimeout","rendereComplete","React","DoctorView","arguments","dataManger","DataManager","url","crudUrl","adaptor","WebApiAdaptor","crossDomain","state","appointmentsList","args","type","cancel","props","undefined","className","style","cellpadding","colSpan","id","name","placeholder","data-name","dataSource","value","EventType","format","Date","startTime","StartTime","endTime","EndTime","rows","cols","height","resize","fetch","res","json","this","setState","console","log","backgroundColor","map","item","index","to","Subject","hello","bind","editorTemplate","popupOpen","onPopupOpen","float","border","paddingTop","currentView","eventSettings","services","Day","Week","WorkWeek","Month","Agenda","DragAndDrop","PatientView","IsBlock","window","open","location","reload","withRouter","TempDoctor","readonly","Login","htmlFor","App","exact","component","Home","renderAs","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88589484.chunk.js","sourcesContent":["\nimport React, {Component} from 'react';\n\nclass Header extends Component {\n  render(){\n  return (\n    <header>\n         <nav>\n             <a href = \"index.html\"><img src = \"/static/logo2.png\" alt = \"logo\" width = \"200\"></img></a>\n        {/* <div class=\"logo\">\n            <h4> <a href=\"index.html\">MPHealth</a></h4>\n        </div> */}\n        <ul class=\"navlinks\">\n           \n            <li><a href=\"#\">Appointments</a></li>\n            <li><a href=\"#\">Notifications</a></li>\n            <li><a href=\"#\">Log in/Sign up</a></li>\n            \n        </ul>\n        <div class=\"burger\">\n            <div class=\"line1\"></div>\n            <div class=\"line2\"></div>\n            <div class=\"line3\"></div>\n        </div>\n    </nav>\n    </header>\n  );\n}\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { faUsers, faUserMd, faClock, faCalendar } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const PatientData = [\n  // {\n  //   title: \"Set Availibility\",\n  //   path: \"/\",\n  //   icon: <h1>D</h1>,\n  //   sub: [],\n  //   cName: 'nav-text'\n  // },\n  // {\n  //   title: \"Appointments\",\n  //   path: \"/\",\n  //   icon: <h1>A </h1>,\n  //   cName: 'nav-text',\n  //   sub: [\n  //     {\n  //       name: \"day\",\n  //       path: \"/\"\n  //     },\n  //     {\n  //       name: \"week\",\n  //       path: \"/\"\n  //     },\n  //     {\n  //       name: \"month\",\n  //       path: \"/\"\n  //     }\n  //   ]\n  // },\n  {\n    title: \"Available doctors\",\n    path: \"/doctor\",\n    icon: <FontAwesomeIcon icon={faUserMd} />,\n    sub: [],\n    cName: 'nav-text'\n  }\n];\n\nexport const DoctorData = [\n  {\n    title: \"Set Availibility\",\n    path: \"/\",\n    icon: <FontAwesomeIcon icon={faClock} />,\n    sub: [],\n    cName: 'nav-text'\n  },\n  {\n    title: \"Appointments\",\n    path: \"/\",\n    icon: <FontAwesomeIcon icon={faCalendar} />,\n    cName: 'nav-text',\n    // sub: [\n    //   {\n    //     name: \"day\",\n    //     path: \"/\"\n    //   },\n    //   {\n    //     name: \"week\",\n    //     path: \"/\"\n    //   },\n    //   {\n    //     name: \"month\",\n    //     path: \"/\"\n    //   }\n    // ]\n  },\n  {\n    title: \"Patient\",\n    path: \"/patient\",\n    icon: <FontAwesomeIcon icon={faUsers} />,\n    sub: [],\n    cName: 'nav-text'\n  }\n];","import * as React from 'react';\n    import { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\n\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","import React from 'react';\nimport Header from './headerfiles/header';\nimport{Inject,ScheduleComponent, Day,Week, WorkWeek, Month, Agenda, DragAndDrop} from '@syncfusion/ej2-react-schedule';\nimport {DoctorData} from \"./SidebarData.js\";\nimport {Link } from \"react-router-dom\";\nimport { SampleBase } from \"./sample-base\";\nimport { DataManager, WebApiAdaptor } from \"@syncfusion/ej2-data\";\nimport { DateTimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\nimport { DropDownListComponent } from \"@syncfusion/ej2-react-dropdowns\";\n\n\nexport default class DoctorView extends SampleBase {\n  constructor() {\n    super(...arguments);\n    this.dataManger = new DataManager({\n      url: \"http://mphealth.herokuapp.com/api/Appointment/\",\n      crudUrl: \"http://mphealth.herokuapp.com/api/Appointment/\",\n        // \"https://ej2services.syncfusion.com/production/web-services/api/Schedule\",\n      adaptor: new WebApiAdaptor(),\n      crossDomain: true\n    });\n\n    this.state = {\n      appointmentsList: []\n    }\n  }\n\n\n  onPopupOpen(args) {\n    if (args.type === 'QuickInfo') {\n      // let statusElement = args.element.querySelector(\"#EventType\");\n      // statusElement.setAttribute(\"name\", \"EventType\");\n      args.cancel = true;\n      // alert('You can use your customized popup here for quick info popup.');\n    }\n  } \n  \n  editorTemplate(props) {\n    return props !== undefined ? (\n      <table\n        className=\"custom-event-editor\"\n        style={{ width: \"100%\", cellpadding: \"5\" }}\n      >\n        <tbody>\n          <tr>\n            <td className=\"e-textlabel\">Name</td>\n            <td colSpan={4}>\n              <input\n                id=\"Summary\"\n                className=\"e-field e-input\"\n                type=\"text\"\n                name=\"Subject\"\n                style={{ width: \"100%\" }}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">Type of Visit</td>\n            <td colSpan={4}>\n              <DropDownListComponent\n                id=\"EventType\"\n                placeholder=\"Choose Type\"\n                data-name=\"EventType\"\n                className=\"e-field\"\n                style={{ width: \"100%\" }}\n                dataSource={[\"Sick\", \"Emergency\", \"Check-Up\"]}\n                value={props.EventType || null}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">From</td>\n            <td colSpan={4}>\n              <DateTimePickerComponent\n                format=\"dd/MM/yy hh:mm a\"\n                id=\"StartTime\"\n                data-name=\"StartTime\"\n                value={new Date(props.startTime || props.StartTime)}\n                className=\"e-field\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">To</td>\n            <td colSpan={4}>\n              <DateTimePickerComponent\n                format=\"dd/MM/yy hh:mm a\"\n                id=\"EndTime\"\n                data-name=\"EndTime\"\n                value={new Date(props.endTime || props.EndTime)}\n                className=\"e-field\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">Reason for visit</td>\n            <td colSpan={4}>\n              <textarea\n                id=\"Description\"\n                className=\"e-field e-input\"\n                name=\"Description\"\n                rows={3}\n                cols={50}\n                style={{\n                  width: \"100%\",\n                  height: \"60px !important\",\n                  resize: \"vertical\"\n                }}\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    ) : (\n      <div />\n    );\n  }\n\n  async componentDidMount() {\n    try {\n      // fetching the data from api, before the page loaded\n      const res = await fetch('http://mphealth.herokuapp.com/api/Appointment'); \n        const appointmentsList = await res.json();\n        this.setState({\n          appointmentsList\n      });\n      console.log(appointmentsList);\n\n    } catch {\n      console.log(\"hello\");\n    }\n      \n  }\n\n  hello() {\n    return (\n      <h3>Appointments</h3>\n    )\n  }\n\n  render(){\n    return (        \n      <div style={{backgroundColor: '#edf1f4'}}>\n        <Header />\n        <div className=\"sidenav\">\n          {DoctorData.map((item, index) => {\n            return (\n              <li key={index} \n                  className={item.cName}>\n                    <Link to={item.path}>{item.icon}<span>{item.title}</span>\n                      </Link>\n              </li>\n              )\n          })\n          }\n\n            {this.state.appointmentsList.map(item => (\n               (\n                <li className={item.cName}>\n                      <h3 id=\"items\">- {item.Subject}</h3>\n                </li>\n              )\n            ))}\n\n          </div>\n          <div className=\"hello\">\n            <h1>Appointments</h1>\n          </div>\n          <div className=\"calender\">\n          \n            <ScheduleComponent hello={this.hello.bind(this)} editorTemplate={this.editorTemplate.bind(this)} popupOpen={this.onPopupOpen.bind(this)} style={{float: 'right', backgroundColor: 'E5E5E5', border: 'none', paddingTop: '1%' }} width = '80%' height = '100%' currentView = 'Week' eventSettings={{ dataSource: this.dataManger }}>\n                <Inject services = {[Day,Week, WorkWeek, Month, Agenda, DragAndDrop]}/>\n              </ScheduleComponent>\n          </div>\n      </div>\n    );\n  }\n}","import './Sidebar.css';\nimport React, {Component} from 'react';\nimport Header from './headerfiles/header';\nimport{Inject,ScheduleComponent, Day,Week, WorkWeek, Month, Agenda} from '@syncfusion/ej2-react-schedule';\nimport {PatientData} from \"./SidebarData.js\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { SampleBase } from \"./sample-base\";\nimport { DataManager, WebApiAdaptor } from \"@syncfusion/ej2-data\";\nimport { DateTimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\nimport { DropDownListComponent } from \"@syncfusion/ej2-react-dropdowns\";\nimport { withRouter } from \"react-router-dom\";\n\nclass PatientView extends Component {\n  constructor() {\n    super(...arguments);\n    this.dataManger = new DataManager({\n      url: \"https://mphealth.herokuapp.com/api/DocAvailability\",\n      crudUrl: \"https://mphealth.herokuapp.com/admin/user/appointment/add/\",\n        // \"https://ej2services.syncfusion.com/production/web-services/api/Schedule\",\n      adaptor: new WebApiAdaptor(),\n      crossDomain: true,\n      IsBlock: true\n    });\n  }\n  onPopupOpen(args) {\n    if (args.type === 'QuickInfo') {\n      // let statusElement = args.element.querySelector(\"#EventType\");\n      // statusElement.setAttribute(\"name\", \"EventType\");\n      args.cancel = true;\n      window.open(\"/create/create_appointment\");\n      // this.props.history.replace(\"\");\n      window.location.reload();\n     \n    }\n  }\n  editorTemplate(props) {\n    return props !== undefined ? (\n      <table\n        className=\"custom-event-editor\"\n        style={{ width: \"100%\", cellpadding: \"5\" }}\n      >\n        <tbody>\n          <tr>\n            <td className=\"e-textlabel\">Name</td>\n            <td colSpan={4}>\n              <input\n                id=\"Summary\"\n                className=\"e-field e-input\"\n                type=\"text\"\n                name=\"Subject\"\n                style={{ width: \"100%\" }}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">Type of Visit</td>\n            <td colSpan={4}>\n              <DropDownListComponent\n                id=\"EventType\"\n                placeholder=\"Choose Type\"\n                data-name=\"EventType\"\n                className=\"e-field\"\n                style={{ width: \"100%\" }}\n                dataSource={[\"Sick\", \"Emergency\", \"Check-Up\"]}\n                value={props.EventType || null}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">From</td>\n            <td colSpan={4}>\n              <DateTimePickerComponent\n                format=\"dd/MM/yy hh:mm a\"\n                id=\"StartTime\"\n                data-name=\"StartTime\"\n                value={new Date(props.startTime || props.StartTime)}\n                className=\"e-field\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">To</td>\n            <td colSpan={4}>\n              <DateTimePickerComponent\n                format=\"dd/MM/yy hh:mm a\"\n                id=\"EndTime\"\n                data-name=\"EndTime\"\n                value={new Date(props.endTime || props.EndTime)}\n                className=\"e-field\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">Reason for visit</td>\n            <td colSpan={4}>\n              <textarea\n                id=\"Description\"\n                className=\"e-field e-input\"\n                name=\"Description\"\n                rows={3}\n                cols={50}\n                style={{\n                  width: \"100%\",\n                  height: \"60px !important\",\n                  resize: \"vertical\"\n                }}\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    ) : (\n      <div />\n    );\n  }\n  render(){\n    return (  \n      \n      <div style={{backgroundColor: '#edf1f4'}}>\n        {/* <Header />  */}\n        <div className=\"sidenav\">\n          {PatientData.map((item, index) => {\n            return (\n              <li key={index} \n                  className={item.cName}>\n                    <Link to={item.path}>{item.icon}<span>{item.title}</span>\n                    </Link>\n              </li>\n              )\n          })\n          }\n          {/*  */}\n        \n        </div> \n        <div className=\"calender\">\n        <ScheduleComponent  editorTemplate={this.editorTemplate.bind(this)} popupOpen={this.onPopupOpen.bind(this)} style={{float: 'right', backgroundColor: 'E5E5E5', border: 'none', paddingTop: '5%' }} width = '81%' height = '100%' currentView = 'Week' eventSettings={{ dataSource: this.dataManger }}>\n                <Inject services = {[Day,Week, WorkWeek, Month, Agenda]}/>\n              </ScheduleComponent>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default withRouter(PatientView);","import { render } from \"react-dom\";\nimport * as React from \"react\";\nimport {\n  ScheduleComponent,\n  Day,\n  Week,\n  WorkWeek,\n  Month,\n  Agenda,\n  Inject\n} from \"@syncfusion/ej2-react-schedule\";\n\nimport { SampleBase } from \"./sample-base\";\nimport { DataManager, WebApiAdaptor } from \"@syncfusion/ej2-data\";\n/**\n * Schedule remote data sample\n */\nexport class TempDoctor extends SampleBase {\n  constructor() {\n    super(...arguments);\n    this.dataManger = new DataManager({\n      url: \"http://127.0.0.1:8000/api/Appointment/?format=json\",\n        // \"https://ej2services.syncfusion.com/production/web-services/api/Schedule\",\n      adaptor: new WebApiAdaptor(),\n      crossDomain: true\n    });\n  }\n  render() {\n    return (\n      <div className=\"schedule-control-section\">\n        <div className=\"control-section\">\n          <div className=\"control-wrapper\">\n            <ScheduleComponent\n              width=\"100%\"\n              height=\"650px\"\n              eventSettings={{ dataSource: this.dataManger }}\n              readonly={false}\n            >\n              <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\n            </ScheduleComponent>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TempDoctor;\n\n","import React, {Component} from 'react';\n\nexport class Login extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return <div className = \"basecontainer\">\n            <div className = \"header\"> Login</div>\n            <div className = \"content\">\n                <div className =\"form\">\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"username\"> Username</label>\n                        <input type = \"text\" name =\"username\" placeholder = \"username\"/>\n                    </div>\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"password\"> Password</label>\n                        <input type = \"password\" name =\"password\" placeholder = \"password\"/>\n                    </div>\n\n                </div>\n            </div>\n            <div className = \"footer\">\n                <button type = \"button\" className = \"btn\">\n                    Login\n                </button>\n            </div>\n        </div>\n    }\n}","import './App.css';\nimport React, {Component} from 'react';\n// import Header from './components/headerfiles/header';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport DoctorView from './components/DoctorView';\nimport PatientView from './components/PatientView';\nimport TempDoctor from './components/TempDoctor';\nimport { Link } from 'react-router-dom';\nimport { Login } from \"./components/Login/index\";\n\n\nclass App extends Component {\n  render(){\n    return (\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route path='/' exact component={Home} />\n            <Route path='/doctor' component={DoctorView} />\n            <Route path='/patient' component={PatientView} />\n            <Route path='/temp' component={TempDoctor} />\n          </Switch>\n        </div>\n\n      </Router>        \n      \n    );\n  }\n}\n\nconst Home = () => (\n  <div>\n    <Login/>\n    <Link to=\"/doctor\">\n  <button renderAs=\"button\">\n    <span>Doctor</span>\n  </button>\n</Link>\n  </div>\n)\n\nexport default App;\n","import React, {Component} from 'react';\n\nexport class DocRegister extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return <div className = \"basecontainer\">\n            <div className = \"header\"> Register</div>\n            <div className = \"content\">\n                <div className =\"form\">\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"username\"> Username</label>\n                        <input type = \"text\" name =\"username\" placeholder = \"username\"/>\n                    </div>\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"email\"> Email</label>\n                        <input type = \"email\" name =\"email\" placeholder = \"email\"/>\n                    </div>\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"clinic\"> Clinic</label>\n                        <input type = \"text\" name =\"clinic\" placeholder = \"clinic\"/>\n                    </div>\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"password\"> Password</label>\n                        <input type = \"password\" name =\"password\" placeholder = \"password\"/>\n                    </div>\n\n                </div>\n            </div>\n            <div className = \"footer\">\n                <button type = \"button\" className = \"btn\">\n                    Register\n                </button>\n            </div>\n        </div>\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}