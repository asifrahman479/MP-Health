[{"/Users/kevintu/Documents/GitHub/MP-Health/src/index.js":"1","/Users/kevintu/Documents/GitHub/MP-Health/src/App.js":"2","/Users/kevintu/Documents/GitHub/MP-Health/src/reportWebVitals.js":"3","/Users/kevintu/Documents/GitHub/MP-Health/src/components/TempDoctor.js":"4","/Users/kevintu/Documents/GitHub/MP-Health/src/components/DoctorView.js":"5","/Users/kevintu/Documents/GitHub/MP-Health/src/components/PatientView.js":"6","/Users/kevintu/Documents/GitHub/MP-Health/src/components/Login/index.jsx":"7","/Users/kevintu/Documents/GitHub/MP-Health/src/components/SidebarData.js":"8","/Users/kevintu/Documents/GitHub/MP-Health/src/components/sample-base.js":"9","/Users/kevintu/Documents/GitHub/MP-Health/src/components/headerfiles/header.js":"10","/Users/kevintu/Documents/GitHub/MP-Health/src/components/Login/docregister.jsx":"11","/Users/kevintu/Documents/GitHub/MP-Health/src/components/Login/login.jsx":"12"},{"size":500,"mtime":1607715358089,"results":"13","hashOfConfig":"14"},{"size":1004,"mtime":1607722816601,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1607715358086,"results":"16","hashOfConfig":"14"},{"size":1244,"mtime":1607720555845,"results":"17","hashOfConfig":"14"},{"size":5815,"mtime":1607728375496,"results":"18","hashOfConfig":"14"},{"size":4818,"mtime":1607722942801,"results":"19","hashOfConfig":"14"},{"size":98,"mtime":1607715358101,"results":"20","hashOfConfig":"14"},{"size":1709,"mtime":1607724736364,"results":"21","hashOfConfig":"14"},{"size":391,"mtime":1607715358091,"results":"22","hashOfConfig":"14"},{"size":733,"mtime":1607729903048,"results":"23","hashOfConfig":"14"},{"size":1501,"mtime":1607715358101,"results":"24","hashOfConfig":"14"},{"size":1036,"mtime":1607715358100,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1jmih41",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"/Users/kevintu/Documents/GitHub/MP-Health/src/index.js",[],["57","58"],"/Users/kevintu/Documents/GitHub/MP-Health/src/App.js",["59"],"import './App.css';\nimport React, {Component} from 'react';\n// import Header from './components/headerfiles/header';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport DoctorView from './components/DoctorView';\nimport PatientView from './components/PatientView';\nimport TempDoctor from './components/TempDoctor';\nimport { Link } from 'react-router-dom';\nimport { Login } from \"./components/Login/index\";\n\n\nclass App extends Component {\n  render(){\n    return (\n      <Router>\n        <div className=\"App\">\n          <Switch>\n            <Route path='/' exact component={PatientView} />\n            <Route path='/doctor' component={DoctorView} />\n            <Route path='/patient' component={PatientView} />\n            <Route path='/temp' component={TempDoctor} />\n            <Route path='/signup' component={Home} />\n          </Switch>\n        </div>\n\n      </Router>        \n      \n    );\n  }\n}\n\nconst Home = () => (\n  <div>\n    <Login/>\n  </div>\n)\n\nexport default App;\n","/Users/kevintu/Documents/GitHub/MP-Health/src/reportWebVitals.js",[],"/Users/kevintu/Documents/GitHub/MP-Health/src/components/TempDoctor.js",["60"],"import { render } from \"react-dom\";\nimport * as React from \"react\";\nimport {\n  ScheduleComponent,\n  Day,\n  Week,\n  WorkWeek,\n  Month,\n  Agenda,\n  Inject\n} from \"@syncfusion/ej2-react-schedule\";\n\nimport { SampleBase } from \"./sample-base\";\nimport { DataManager, WebApiAdaptor } from \"@syncfusion/ej2-data\";\n/**\n * Schedule remote data sample\n */\nexport class TempDoctor extends SampleBase {\n  constructor() {\n    super(...arguments);\n    this.dataManger = new DataManager({\n      url: \"http://127.0.0.1:8000/api/Appointment/?format=json\",\n        // \"https://ej2services.syncfusion.com/production/web-services/api/Schedule\",\n      adaptor: new WebApiAdaptor(),\n      crossDomain: true\n    });\n  }\n  render() {\n    return (\n      <div className=\"schedule-control-section\">\n        <div className=\"control-section\">\n          <div className=\"control-wrapper\">\n            <ScheduleComponent\n              width=\"100%\"\n              height=\"650px\"\n              eventSettings={{ dataSource: this.dataManger }}\n              readonly={false}\n            >\n              <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\n            </ScheduleComponent>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TempDoctor;\n\n","/Users/kevintu/Documents/GitHub/MP-Health/src/components/DoctorView.js",[],"/Users/kevintu/Documents/GitHub/MP-Health/src/components/PatientView.js",["61","62","63","64"],"import './Sidebar.css';\nimport React, {Component} from 'react';\nimport Header from './headerfiles/header';\nimport{Inject,ScheduleComponent, Day,Week, WorkWeek, Month, Agenda} from '@syncfusion/ej2-react-schedule';\nimport {PatientData} from \"./SidebarData.js\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { SampleBase } from \"./sample-base\";\nimport { DataManager, WebApiAdaptor } from \"@syncfusion/ej2-data\";\nimport { DateTimePickerComponent } from \"@syncfusion/ej2-react-calendars\";\nimport { DropDownListComponent } from \"@syncfusion/ej2-react-dropdowns\";\nimport { withRouter } from \"react-router-dom\";\n\nclass PatientView extends Component {\n  constructor() {\n    super(...arguments);\n    this.dataManger = new DataManager({\n      url: \"http://127.0.0.1:8000/api/DocAvailability\",\n      crudUrl: \"https://mphealth.herokuapp.com/admin/user/appointment/add/\",\n        // \"https://ej2services.syncfusion.com/production/web-services/api/Schedule\",\n      adaptor: new WebApiAdaptor(),\n      crossDomain: true,\n      IsBlock: true\n    });\n  }\n  onPopupOpen(args) {\n    if (args.type === 'QuickInfo') {\n      // let statusElement = args.element.querySelector(\"#EventType\");\n      // statusElement.setAttribute(\"name\", \"EventType\");\n      args.cancel = true;\n      window.open(\"/create/create_appointment\");\n      window.location.reload();\n     \n    }\n  }\n  editorTemplate(props) {\n    return props !== undefined ? (\n      <table\n        className=\"custom-event-editor\"\n        style={{ width: \"100%\", cellpadding: \"5\" }}\n      >\n        <tbody>\n          <tr>\n            <td className=\"e-textlabel\">Name</td>\n            <td colSpan={4}>\n              <input\n                id=\"Summary\"\n                className=\"e-field e-input\"\n                type=\"text\"\n                name=\"Subject\"\n                style={{ width: \"100%\" }}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">Type of Visit</td>\n            <td colSpan={4}>\n              <DropDownListComponent\n                id=\"EventType\"\n                placeholder=\"Choose Type\"\n                data-name=\"EventType\"\n                className=\"e-field\"\n                style={{ width: \"100%\" }}\n                dataSource={[\"Sick\", \"Emergency\", \"Check-Up\"]}\n                value={props.EventType || null}\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">From</td>\n            <td colSpan={4}>\n              <DateTimePickerComponent\n                format=\"dd/MM/yy hh:mm a\"\n                id=\"StartTime\"\n                data-name=\"StartTime\"\n                value={new Date(props.startTime || props.StartTime)}\n                className=\"e-field\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">To</td>\n            <td colSpan={4}>\n              <DateTimePickerComponent\n                format=\"dd/MM/yy hh:mm a\"\n                id=\"EndTime\"\n                data-name=\"EndTime\"\n                value={new Date(props.endTime || props.EndTime)}\n                className=\"e-field\"\n              />\n            </td>\n          </tr>\n          <tr>\n            <td className=\"e-textlabel\">Reason for visit</td>\n            <td colSpan={4}>\n              <textarea\n                id=\"Description\"\n                className=\"e-field e-input\"\n                name=\"Description\"\n                rows={3}\n                cols={50}\n                style={{\n                  width: \"100%\",\n                  height: \"60px !important\",\n                  resize: \"vertical\"\n                }}\n              />\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    ) : (\n      <div />\n    );\n  }\n  render(){\n    return (  \n      \n      <div style={{backgroundColor: '#edf1f4'}}>\n        {/* <Header />  */}\n        <div className=\"sidenav\">\n          {PatientData.map((item, index) => {\n            return (\n              <li key={index} \n                  className={item.cName}>\n                    <Link to={item.path}>{item.icon}<span>{item.title}</span>\n                    </Link>\n              </li>\n              )\n          })\n          }\n          {/*  */}\n        \n        </div> \n        <div className=\"calender\">\n        <Header />\n        <ScheduleComponent  editorTemplate={this.editorTemplate.bind(this)} popupOpen={this.onPopupOpen.bind(this)} style={{float: 'right', backgroundColor: 'E5E5E5', border: 'none', paddingTop: '5%' }} width = '81%' height = '100%' currentView = 'Week' eventSettings={{ dataSource: this.dataManger }}>\n                <Inject services = {[Day,Week, WorkWeek, Month, Agenda]}/>\n              </ScheduleComponent>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default withRouter(PatientView);","/Users/kevintu/Documents/GitHub/MP-Health/src/components/Login/index.jsx",[],"/Users/kevintu/Documents/GitHub/MP-Health/src/components/SidebarData.js",["65","66","67","68","69"],"import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { faUsers, faUserMd, faClock, faCalendar, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nexport const PatientData = [\n  // {\n  //   title: \"Set Availibility\",\n  //   path: \"/\",\n  //   icon: <h1>D</h1>,\n  //   sub: [],\n  //   cName: 'nav-text'\n  // },\n  // {\n  //   title: \"Appointments\",\n  //   path: \"/\",\n  //   icon: <h1>A </h1>,\n  //   cName: 'nav-text',\n  //   sub: [\n  //     {\n  //       name: \"day\",\n  //       path: \"/\"\n  //     },\n  //     {\n  //       name: \"week\",\n  //       path: \"/\"\n  //     },\n  //     {\n  //       name: \"month\",\n  //       path: \"/\"\n  //     }\n  //   ]\n  // },\n  {\n    title: \"Available doctors\",\n    path: \"/doctor\",\n    icon: <FontAwesomeIcon icon={faUserMd} />,\n    sub: [],\n    cName: 'nav-text'\n  }\n];\n\nexport const DoctorData = [\n  {\n    title: \"Set Availibility\",\n    path: \"/create/setavailability\",\n    icon: <FontAwesomeIcon icon={faClock} />,\n    sub: [],\n    cName: 'nav-text'\n  },\n  {\n    title: \"Appointments\",\n    path: \"/\",\n    icon: <FontAwesomeIcon icon={faCalendar} />,\n    cName: 'nav-text',\n    // sub: [\n    //   {\n    //     name: \"day\",\n    //     path: \"/\"\n    //   },\n    //   {\n    //     name: \"week\",\n    //     path: \"/\"\n    //   },\n    //   {\n    //     name: \"month\",\n    //     path: \"/\"\n    //   }\n    // ]\n  },\n  {\n    title: \"Patient\",\n    path: \"/patient\",\n    icon: <FontAwesomeIcon icon={faUsers} />,\n    sub: [],\n    cName: 'nav-text'\n  },\n  \n];\n\nexport const colorData = [\n  {\n    code: <FontAwesomeIcon icon = {faCircle}/>,\n  }\n];","/Users/kevintu/Documents/GitHub/MP-Health/src/components/sample-base.js",[],"/Users/kevintu/Documents/GitHub/MP-Health/src/components/headerfiles/header.js",["70"],"/Users/kevintu/Documents/GitHub/MP-Health/src/components/Login/docregister.jsx",["71"],"import React, {Component} from 'react';\n\nexport class DocRegister extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return <div className = \"basecontainer\">\n            <div className = \"header\"> Register</div>\n            <div className = \"content\">\n                <div className =\"form\">\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"username\"> Username</label>\n                        <input type = \"text\" name =\"username\" placeholder = \"username\"/>\n                    </div>\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"email\"> Email</label>\n                        <input type = \"email\" name =\"email\" placeholder = \"email\"/>\n                    </div>\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"clinic\"> Clinic</label>\n                        <input type = \"text\" name =\"clinic\" placeholder = \"clinic\"/>\n                    </div>\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"password\"> Password</label>\n                        <input type = \"password\" name =\"password\" placeholder = \"password\"/>\n                    </div>\n\n                </div>\n            </div>\n            <div className = \"footer\">\n                <button type = \"button\" className = \"btn\">\n                    Register\n                </button>\n            </div>\n        </div>\n    }\n}","/Users/kevintu/Documents/GitHub/MP-Health/src/components/Login/login.jsx",["72"],"import React, {Component} from 'react';\n\nexport class Login extends Component{\n    constructor(props){\n        super(props);\n    }\n\n    render(){\n        return <div className = \"basecontainer\">\n            <div className = \"header\"> Login</div>\n            <div className = \"content\">\n                <div className =\"form\">\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"username\"> Username</label>\n                        <input type = \"text\" name =\"username\" placeholder = \"username\"/>\n                    </div>\n                    <div className = \"formgroup\">\n                        <label htmlFor = \"password\"> Password</label>\n                        <input type = \"password\" name =\"password\" placeholder = \"password\"/>\n                    </div>\n\n                </div>\n            </div>\n            <div className = \"footer\">\n                <button type = \"button\" className = \"btn\">\n                    Login\n                </button>\n            </div>\n        </div>\n    }\n}",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":8,"column":10,"nodeType":"79","messageId":"80","endLine":8,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":1,"column":10,"nodeType":"79","messageId":"80","endLine":1,"endColumn":16},{"ruleId":"77","severity":1,"message":"82","line":6,"column":27,"nodeType":"79","messageId":"80","endLine":6,"endColumn":33},{"ruleId":"77","severity":1,"message":"83","line":6,"column":35,"nodeType":"79","messageId":"80","endLine":6,"endColumn":41},{"ruleId":"77","severity":1,"message":"84","line":6,"column":43,"nodeType":"79","messageId":"80","endLine":6,"endColumn":48},{"ruleId":"77","severity":1,"message":"85","line":7,"column":10,"nodeType":"79","messageId":"80","endLine":7,"endColumn":20},{"ruleId":"77","severity":1,"message":"86","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"82","line":2,"column":27,"nodeType":"79","messageId":"80","endLine":2,"endColumn":33},{"ruleId":"77","severity":1,"message":"83","line":2,"column":35,"nodeType":"79","messageId":"80","endLine":2,"endColumn":41},{"ruleId":"77","severity":1,"message":"84","line":2,"column":43,"nodeType":"79","messageId":"80","endLine":2,"endColumn":48},{"ruleId":"77","severity":1,"message":"78","line":2,"column":50,"nodeType":"79","messageId":"80","endLine":2,"endColumn":54},{"ruleId":"87","severity":1,"message":"88","line":16,"column":17,"nodeType":"89","endLine":16,"endColumn":29},{"ruleId":"90","severity":1,"message":"91","line":4,"column":5,"nodeType":"92","messageId":"93","endLine":6,"endColumn":6},{"ruleId":"90","severity":1,"message":"91","line":4,"column":5,"nodeType":"92","messageId":"93","endLine":6,"endColumn":6},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'render' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'SampleBase' is defined but never used.","'Component' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]